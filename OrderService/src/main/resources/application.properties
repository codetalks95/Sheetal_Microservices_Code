#For more Information on Properties Give a look into the below documentation:-
#https://javatechonline.com/how-to-implement-fault-tolerance-in-microservices-using-resilience4j/
server.port=8087
spring.application.name=ORDER-SERVICE
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
productServiceGetURL=http://localhost:9094/welcome
employeeInformationPostUrl=http://localhost:9094/getEmployeeInformation
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoints.web.exposure.include=*
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-for-period=2
resilience4j.ratelimiter.instances.getMessageRateLimit.limit-refresh-period=5s
resilience4j.ratelimiter.instances.getMessageRateLimit.timeout-duration=0
resilience4j.retry.instances.getEmployeeRetry.max-attempts=2
resilience4j.retry.instances.getEmployeeRetry.wait-duration=2s
resilience4j.retry.instances.getEmployeeRetry.retry-exceptions=java.lang.RuntimeException
resilience4j.circuitbreaker.instances.getEmployeeTolerant.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.getEmployeeTolerant.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.getEmployeeTolerant.failureRateThreshold=50
resilience4j.circuitbreaker.instances.getEmployeeTolerant.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.getEmployeeTolerant.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.getEmployeeTolerant.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.getEmployeeTolerant.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.getEmployeeTolerant.slidingWindowSize=10
resilience4j.circuitbreaker.instances.getEmployeeTolerant.slidingWindowType=COUNT_BASED


